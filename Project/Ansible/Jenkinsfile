pipeline{
    agent {
      node {
        label 'slave_1'
      }
    }

    tools {
         maven 'MAVEN_HOME'
         jdk 'JAVA_HOME'
    }
    stages {
     stage('pre-build step') {
            steps {
		sh '''
                echo "Pre Build Step"
		'''
	    }
	}
       stage('Git Checkout') {
            steps{
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'github access', url: 'https://github.com/GoudSagar/Hello-World-Code.git']]])
            }
        }
        stage('build') {
            steps{
               sh '''
                mvn package
                '''
            }
        }
        stage ('Unit Test') {
	        steps {
                echo 'Running Unit Testing'
                sh '''
                mvn test
                '''
             }
         }
         stage ('Static Code Analysis') {
             environment {
             scannerHome = tool 'SONAR_SCANNER'
             }
             steps {
                echo 'Running Static Code Analysis'
                 withSonarQubeEnv('SONAR_HOME') {
                 sh '${scannerHome}/bin/sonar-scanner'
                 }
            }
        }
         stage('Jfrog Artifact Upload') {
            steps {
              rtUpload (
                serverId: 'artifactory',
                spec: '''{
                      "files": [
                        {
                          "pattern": "*.war",
                           "target": "local-snapshots"
                        }
                    ]
                }'''
              )
          }
        }
        stage('Ansible Deployment') {
         parallel {
            stage('Ansible Dev Deployment') {
                when {
                  expression { "$Env_Name" == 'DEV' }
                 }
                 steps{
                    script {
                      sh "ansible-playbook -i /var/lib/jenkins/inventory webserver-1-tomcat.yml -vv"
                     }
                    } 
                  }

            stage('Ansible Prod Deployment') {
                when {
                  expression { "$Env_Name" == 'PROD' }
                 }
                 steps{
                    script {
                      sh "ansible-playbook -i /var/lib/jenkins/inventory webserver-2-tomcat.yml -vv"
                     }
                    } 
                  }
                }
            }
        stage('post-build step') {
            steps {
		sh '''
                echo "Successfull Pipeline"
		'''
	    }
	}
     }
}
